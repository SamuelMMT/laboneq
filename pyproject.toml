[build-system]
requires = [ "setuptools>=65.0.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "laboneq"
dynamic = ["version", "readme"]
description = "Zurich Instruments LabOne Q software framework for quantum computing control"
license = {text = "Apache 2.0"}
requires-python = ">=3.9"
authors = [
    { name = "Zurich Instruments Development Team", email = "info@zhinst.com" },
]
keywords = [
    "quantum",
    "sdk",
    "zhinst",
]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "engineering_notation",
    "flask",
    "intervaltree",
    "ipykernel",
    "jsonschema",
    "marshmallow",
    "marshmallow_enum",
    "marshmallow_union",
    "matplotlib",
    "numpy",
    "openpulse",
    "openqasm3",
    "orjson",
    "pybase64",
    "pycparser",
    "python-box",
    "pyyaml",
    "requests",
    "rustworkx",
    "scipy",
    "sortedcollections",
    "zhinst-core==23.2.42414",
    "zhinst-toolkit~=0.5.0",
    "zhinst-utils~=0.3.0",
]

[project.urls]
Homepage = "https://github.com/zhinst/laboneq"

[tool.setuptools]
zip-safe = false

[tool.setuptools.dynamic]
version = {file = "laboneq/VERSION.txt"}
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools.packages.find]
where = ["."]
include = ["laboneq*"]
namespaces = false

[tool.setuptools.package-data]
laboneq = [
    "compiler/qccs-schema_2_5_0.json",
    "pulse_sheet_viewer/pulse_sheet_viewer_template.html",
    "VERSION.txt"
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
src_paths = ["laboneq", "tests"]

[tool.ruff]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # flake8-2020
    "YTT",
    # flake8-quotes
    "Q",
]

ignore = [
    "E501",
    "F405",
    "E741",
    "E722",
    "E402",
    # Do not assign a lambda expression, use a def
    "E731"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

exclude = [
    "tests/integration/dsl_v3",
    ".eggs",
    ".git",
    ".ruff_cache",
    ".tox",
    ".venv",
    "_build",
    "build",
    "dist",
    "venv",
]

line-length = 88
target-version = "py39"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
# F401: Imported but unused
"__init__.py" = ["F401"]
"laboneq/simple.py" = ["F401"]

# Ignore star import, mainly from laboneq.simple (TODO: Fix this)
"tests/system/*" = ["F403", "F405"]
"tests/integration/dsl_v3/*" = ["F403", "F405"]
